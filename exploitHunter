metaxploit=include_lib("/lib/metaxploit.so")
if params.len > 2 or params[0] == "-h" or params[0] == "--help" then exit("<b>Usage: "+program_path.split("/")[-1]+" [ip_address] [port]</b>")

if params.len > 1 then
	net_session=metaxploit.net_use(params[0],params[1].val) //net session targetting port
else
	net_session=metaxploit.net_use(params[0]) //net session targetting router
end if


//Finds and prints all memAddresses and the associtated unsecValues to exploit them to the terminal
find_vulnerable=function()
	vul_addrs=metaxploit.scan(net_dump) //get memory addresses
	for item in vul_addrs
		print("Memory Address - " + item)
		print(metaxploit.scan_address(net_dump,item)) //get unsecVal
	end for
end function


//Attempts to execute the exploit based on the parameters given and returns the object type if successful.
//If the object is a "shell" then a remote shell is started on the target computer automatically.
//WARNING this ^ can be a bad thing, the shell may have guest privlliges so you may have to work
//quickly to gain root access and delete logs in the event you are being traced.
try_exploit=function(memAddress,unsecValue)
	exploit=net_dump.overflow(memAddress,unsecValue)
	print("Returned " + typeof(exploit) + " object")
	if exploit == "shell" then
		exploit.start_terminal
	end function	
	
	
	net_dump=net_session.dump_lib //metalib
	check_version=net_dump.version //metalib version
	check_name=net_dump.lib_name //metalib name
	print("Target: " + check_name + " - v" + check_version)
	
	//find_vulnerable()
	try_exploit("0x3BCB3260","ecteventimessagetcounternalcolorscheme")
	
